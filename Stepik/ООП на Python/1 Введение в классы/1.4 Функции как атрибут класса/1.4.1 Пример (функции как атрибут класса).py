# Как использовать функцию, как атрибут класса (но не экземпляра класса)

class Car:
    model = "BMW"
    engine = 1.6

    def drive():  # о self будет сказано далее
        print("Let's go")


# Переменные, которые объявлены внутри класса называются атрибутами класса
# Также мы можем внутри класса объявлять функции, они называются методами класса


print(Car.__dict__)
print(Car.drive())  # Через класс мы можем обращаться к функции
print()
print(getattr(Car, "drive")())  # также можно использовать getattr

# Посмотрим, что произойдет, если мы обратимся к функции через экземпляр класса
a = Car()
print(a.drive)  # bound method
# print(a.drive()) #- в таком случае мы получим ошибку
# о том, чо функция принимает 1 параметр, но мы ничего не пеоедавали
# Об этой ошибке подробно будет рассказано на следующем уроке

