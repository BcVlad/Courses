class Cat:
    breed = 'pers'  # создадим породу всех кошек - персидская

    def set_value(self, value, age=0):  # вне зависимости от имени, сюда придет именно наш объект - экземпляр класса
        self.name = value
        self.age = age


bob = Cat()
bob.set_value("Bob")
print(bob.__dict__)


# Чтобы каждый раз не вызывать метод set_value для иницилизации атрибутов, напишем
# через метод магический метод (init)
# в Python магические методы называются через 2 нижних подчеркивания и заканчивается ими
# Каждый из магических методов будет автоматически срабатывать в определенный момент.
# init будет срабатывать после создания объекта - экземпляра класса.
# Обратим внимание, что этот метод принимает сам экземпляр

class Cat:
    breed = 'pers'  # создадим породу всех кошек - персидская

    def set_value(self, value, age=0):  # вне зависимости от имени, сюда придет именно наш объект - экземпляр класса
        self.name = value
        self.age = age

    def __init__(self):  # метод init вызывается после создания объекта, когда пространство
        # имен уже создано (можем обращаться к __dict__)
        # метод init нужен для инициализации, т.е. для заполнения объекта какими-либо значениями
        print("Hello new object is", self)


Cat()
tom = Cat()
print(tom.__dict__)


# Определим в методе init основные параметры. Также избавимся от метода set_value,
# чтобы не вызывать его вручную
class Cat:
    def __init__(self, name, breed='pers', age=1,
                 color='white'):  # метод init вызывается после создания объекта, когда пространство
        # имен уже создано (можем обращаться к __dict__)
        # метод init нужен для инициализации, т.е. для заполнения объекта какими-либо значениями
        print("Hello new object is", self, name, breed, age, color)
        self.name = name
        self.age = age
        self.breed = breed
        self.color = color


Cat("Tom", "siam", 40, "black")
walt = Cat("Walt")
